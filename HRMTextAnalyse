import java.util.*; // import

public class TextAnalyse { // Class

	private String text; // Attribut
	
	 public TextAnalyse(String text)  // Konstruktor
     {
         this.text = text;
     }
	 
	 public String getText() // getter
     {
             return text;
     }
	 
	 public void setText(String text) // setter
     {
		 this.text = text;
     }
	

		public static void main(String[] args) { // main method --> hier rufe ich alle Methoden auf
			
			// Es nimmt einen Text entgegen und gibt die Antwort der Analyse zurück auf die Konsole aus
			
			TextAnalyse a = new TextAnalyse("Slartibartfast's study was a total mess, like the results of an\r\n"
					+ "explosion in a public library. The old man frowned as they stepped in.\r\n"
					+ "\"Terribly unfortunate,\" he said, \"a diode blew in one of the life`\r\n"
					+ "support computers. When we tried to revive our cleaning staff we\r\n"
					+ "discovered they'd been dead for nearly thirty thousand years. Who's\r\n"
					+ "going to clear away the bodies, that's what I want to know. Look why\r\n"
					+ "don't you sit yourself down over there and let me plug you in?\"\r\n"
					+ "He gestured Arthur towards a chair which looked as if it had been\r\n"
					+ "made out of the rib cage of a stegosaurus.\r\n"
					+ "\"It was made out of the rib cage of a stegosaurus,\" explained the\r\n"
					+ "old man as he pottered about fishing bits of wire out from under\r\n"
					+ "tottering piles of paper and drawing instruments. \"Here,\" he said,\r\n"
					+ "\"hold these,\" and passed a couple of stripped wire end to Arthur.\r\n"
					+ "The instant he took hold of them a bird flew straight through him.\r\n"
					+ "He was suspended in mid`air and totally invisible to himself.\r\n"
					+ "Beneath him was a pretty treelined city square, and all around it as\r\n"
					+ "far as the eye could see were white concrete buildings of airy\r\n"
					+ "spacious design but somewhat the worse for wear ?? many were\r\n"
					+ "cracked and stained with rain. Today however the sun was shining, a\r\n"
					+ "fresh breeze danced lightly through the trees, and the odd sensation\r\n"
					+ "that all the buildings were quietly humming was probably caused by\r\n"
					+ "the fact that the square and all the streets around it were thronged\r\n"
					+ "with cheerful excited people. Somewhere a band was playing, brightly\r\n"
					+ "coloured flags were fluttering in the breeze and the spirit of carnival\r\n"
					+ "was in the air.\r\n"
					+ "Arthur felt extraordinarily lonely stuck up in the air above it all\r\n"
					+ "without so much as a body to his name, but before he had time to\r\n"
					+ "reflect on this a voice rang out across the square and called for\r\n"
					+ "everyone's attention.\r\n"
					+ "A man standing on a brightly dressed dais before the building\r\n"
					+ "which clearly dominated the square was addressing the crowd over a\r\n"
					+ "Tannoy.\r\n"
					+ "\"O people waiting in the Shadow of Deep Thought \" he cried out.\r\n"
					+ "\"Honoured Descendants of Vroomfondel and Majikthise, the Greatest\r\n"
					+ "and Most Truly Interesting Pundits the Universe has ever known... The\r\n"
					+ "Time of Waiting is over!\"\r\n"
					+ "Wild cheers broke out amongst the crowd. Flags, streamers and\r\n"
					+ "wolf whistles sailed through the air. The narrower streets looked\r\n"
					+ "rather like centipedes rolled over on their backs and frantically waving\r\n"
					+ "their legs in the air.\r\n"
					+ "\"Seven and a half million years our race has waited for this Great\r\n"
					+ "and Hopefully Enlightening Day \" cried the cheer leader. \"The Day of\r\n"
					+ "the Answer!\"\r\n"
					+ "Hurrahs burst from the ecstatic crowd.\r\n"
					+ "\"Never again,\" cried the man, \"never again will we wake up in the\r\n"
					+ "morning and think Who am I? What is my purpose in life? Does it\r\n"
					+ "really, cosmically speaking, matter if I don't get up and go to work?\r\n"
					+ "For today we will finally learn once and for all the plain and simple\r\n"
					+ "answer to all these nagging little problems of Life, the Universe and\r\n"
					+ "Everything!\"\r\n"
					+ "As the crowd erupted once again, Arthur found himself gliding\r\n"
					+ "through the air and down towards one of the large stately windows\r\n"
					+ "on the first floor of the building behind the dais from which the\r\n"
					+ "speaker was addressing the crowd.\r\n"
					+ "He experienced a moment's panic as he sailed straight through\r\n"
					+ "towards the window, which passed when a second or so later he\r\n"
					+ "found he had gone right through the solid glass without apparently\r\n"
					+ "touching it.\r\n"
					+ "No one in the room remarked on his peculiar arrival, which is\r\n"
					+ "hardly surprising as he wasn't there. He began to realize that the\r\n"
					+ "whole experience was merely a recorded projection which knocked\r\n"
					+ "six`track seventy`millimetre into a cocked hat.\r\n"
					+ "The room was much as Slartibartfast had described it. In seven and\r\n"
					+ "a half million years it had been well looked after and cleaned regularly\r\n"
					+ "every century or so. The ultramahagony desk was worn at the edges,\r\n"
					+ "the carpet a little faded now, but the large computer terminal sat in\r\n"
					+ "sparkling glory on the desk's leather top, as bright as if it had been\r\n"
					+ "constructed yesterday.\r\n"
					+ "Two severely dressed men sat respectfully before the terminal and\r\n"
					+ "waited.\r\n"
					+ "\"The time is nearly upon us,\" said one, and Arthur was surprised to\r\n"
					+ "see a word suddenly materialize in thin air just by the man's neck. The\r\n"
					+ "word was Loonquawl, and it flashed a couple of times and the\r\n"
					+ "disappeared again. Before Arthur was able to assimilate this the other\r\n"
					+ "man spoke and the word Phouchg appeared by his neck.\r\n"
					+ "\"Seventy`five thousand generations ago, our ancestors set this\r\n"
					+ "program in motion,\" the second man said, \"and in all that time we will\r\n"
					+ "be the first to hear the computer speak.\"\r\n"
					+ "\"An awesome prospect, Phouchg,\" agreed the first man, and Arthur\r\n"
					+ "suddenly realized that he was watching a recording with subtitles.\r\n"
					+ "\"We are the ones who will hear,\" said Phouchg, \"the answer to the\r\n"
					+ "great question of Life... \"\r\n"
					+ "\"The Universe...!\" said Loonquawl.\r\n"
					+ "\"And Everything...!\"\r\n"
					+ "\"Shhh,\" said Loonquawl with a slight gesture, \"I think Deep Thought\r\n"
					+ "is preparing to speak!\"\r\n"
					+ "There was a moment's expectant pause whilst panels slowly came\r\n"
					+ "to life on the front of the console. Lights flashed on and off\r\n"
					+ "experimentally and settled down into a businesslike pattern. A soft\r\n"
					+ "low hum came from the communication channel.\r\n"
					+ "\"Good morning,\" said Deep Thought at last.\r\n"
					+ "\"Er... Good morning, O Deep Thought,\" said Loonquawl nervously,\r\n"
					+ "\"do you have... er, that is...\"\r\n"
					+ "\"An answer for you?\" interrupted Deep Thought majestically. \"Yes.\r\n"
					+ "I have.\"\r\n"
					+ "The two men shivered with expectancy. Their waiting had not been\r\n"
					+ "in vain.\r\n"
					+ "\"There really is one?\" breathed Phouchg.\r\n"
					+ "\"There really is one,\" confirmed Deep Thought.\r\n"
					+ "\"To Everything? To the great Question of Life, the Universe and\r\n"
					+ "Everything?\"\r\n"
					+ "\"Yes.\"\r\n"
					+ "Both of the men had been trained for this moment, their lives had\r\n"
					+ "been a preparation for it, they had been selected at birth as those\r\n"
					+ "who would witness the answer, but even so they found themselves\r\n"
					+ "gasping and squirming like excited children.\r\n"
					+ "\"And you're ready to give it to us?\" urged Loonquawl.\r\n"
					+ "\"I am.\"\r\n"
					+ "\"Now?\"\r\n"
					+ "\"Now,\" said Deep Thought.\r\n"
					+ "They both licked their dry lips.\r\n"
					+ "\"Though I don't think,\" added Deep Thought, \"that you're going to\r\n"
					+ "like it.\"\r\n"
					+ "\"Doesn't matter!\" said Phouchg. \"We must know it Now!\"\r\n"
					+ "\"Now?\" inquired Deep Thought.\r\n"
					+ "\"Yes! Now...\"\r\n"
					+ "\"Alright,\" said the computer and settled into silence again. The two\r\n"
					+ "men fidgeted. The tension was unbearable.\r\n"
					+ "\"You're really not going to like it,\" observed Deep Thought.\r\n"
					+ "\"Tell us!\"\r\n"
					+ "\"Alright,\" said Deep Thought. \"The Answer to the Great\r\n"
					+ "Question...\"\r\n"
					+ "\"Yes...!\"\r\n"
					+ "\"Of Life, the Universe and Everything...\" said Deep Thought.\r\n"
					+ "\"Yes...!\"\r\n"
					+ "\"Is...\" said Deep Thought, and paused.\r\n"
					+ "\"Yes...!\"\r\n"
					+ "\"Is...\"\r\n"
					+ "\"Yes...!!!...?\"\r\n"
					+ "\"Forty`two,\" said Deep Thought, with infinite majesty and calm."); // Kreirung des Objects Textanalyse 
					
			a.charCount(a); // Es zählt wie oft welcher Buchstaben vorkommt, Buchstaben, welche nicht vorkommen sollen nicht erscheinen.
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			a.countLowerAndUpperChar(a); // Es zählt wie viele Gross -und wie viele Kleinbuchstaben vorhanden sind
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			a.allCharTolower(a); // Es macht alle Buchstaben zu Kleinbuchstaben
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
		
			a.charCount(a); // erneute Methodenverwendung nach Anpassung durch Methode allCharTolower
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			a.countLowerAndUpperChar(a); // erneute Methodenverwendung nach Anpassung durch Methode allCharTolower
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			
			a.countCharAndPunctuation(a); // Bonus: Es zählt die Anzahl Buchstaben und Satzzeichen
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			
			a.removePunctuation(a); // Bonus: Es entfernt alle Satzzeichen
			System.out.println("-----------"); // Zwecks Übersicht auf Konsole
			a.countCharAndPunctuation(a); // erneute Methodenverwendung nach Anpassung durch Methode removePunctuation
			
			// Die Reihenfolge der einzelnen Analyse-Features soll einfach definierbar sein und sie sollen auch mehrfach ausführbar sein 
			// --> Diesem Umstand wurde Rechnung getragen mit obenstehender Beispiel-Reihenfolge
			
		}
		
		
		public void charCount(TextAnalyse a) {
			HashMap<Character, Integer> hashMapCharCount = new HashMap<Character, Integer>(); // --> mit Google inspiriert --> A HashMap however, store items in "key/value" pairs, and you can access them by an index of another type (e.g. a String).
			char[] textAnalyseChar = this.getText().toCharArray(); // Methode verwandelt String in einen char-Array
	        for (char c : textAnalyseChar) {
	            if (hashMapCharCount.containsKey(c)) {
	            	// bei Erstdurchgang nie der Fall 
	                // Wenn char in hashMapcharCount, dann zähle +1,
	            	hashMapCharCount.put(c, hashMapCharCount.get(c) + 1);
	            }
	            else {
	                // bei Erstdurchgang immer der Fall 
	                // Wenn char in hashMapcharCount nicht vorhanden, füge char zu charCountMap mit Wert 1
	            	hashMapCharCount.put(c, 1);
	            }
	        }
	        System.out.println("Methode zur Analyse nach Buchstaben und Anzahl (GroupBy).");
        	for (Map.Entry entry : hashMapCharCount.entrySet()) { // for-each für jedes key-value Paar vom Set hashMapcharCount
        	System.out.println(entry.getKey() + " " + entry.getValue()); // Ausgabe in Konsole von Key (Char) und Value (count) für jedes Paar
        	}
    	}
			   
		
		public void allCharTolower(TextAnalyse a) { 
			this.setText(this.getText().toLowerCase()); // Methode Umwandlung in Kleinbuchstaben und set auf das Objekt
			System.out.println("Methode zur Umwandlung in Kleinbuchstaben.");
			System.out.println("");
			System.out.println(this.getText()); // Ausgabe in Konsole von geändertem Objekt
		}
		
		
		public void countLowerAndUpperChar(TextAnalyse a) {
			int upperCase = 0;
			int lowerCase = 0;
			for (int i = 0; i < this.getText().length(); i++) { // for-Schlaufe
			    if (Character.isUpperCase(this.getText().charAt(i))) upperCase++; // +1 hochzählen für Grossbuchstaben
			    if (Character.isLowerCase(this.getText().charAt(i))) lowerCase++; // +1 hochzählen für Kleinbuchstaben
			}
			System.out.println("Methode zur Gross- und Kleinbuchstabenanalyse. Es hat " +  upperCase + " Grossbuchstaben sowie " + lowerCase + " Kleinbuchstaben in diesem String."); // Ausgabe in Konsole 
		}
		

		public void countCharAndPunctuation(TextAnalyse a) {
			int countPunct = 0;
			int countChar = 0;
			for (int i = 0; i < this.getText().length(); i++) { // for-Schlaufe
			    char currentChar = this.getText().charAt(i); // assign auf aktuellen char 
			    if (currentChar  != ' ' && currentChar  != ',' && currentChar  != '.' && currentChar  != '!' && currentChar  != '?' && currentChar  != '\'' && currentChar  != '"') { // If ob kein Satzzeichen
			    	countChar++; // +1 hochzählen für Char 
			    }
			 }
			for (int i = 0; i < this.getText().length(); i++) { // for-Schlaufe
			    char currentChar = this.getText().charAt(i); 
			    if (currentChar  == ' ' || currentChar  == ',' || currentChar  == '.' && currentChar  == '!' && currentChar  == '?' && currentChar  == '\'' && currentChar  != '"') { // If ob ein Satzzeichen
			    	countPunct++; // +1 hochzählen für Satzzeichen 
			    }
			 }
			System.out.println("Methode zur Buchstaben- und Satzzeichenanalyse. Es hat " +  countChar + " Buchstaben sowie " + countPunct + " Satzzeichen in diesem String."); // Ausgabe in Konsole von Buchstaben und Satzzeichen
		}
		
			
		public void removePunctuation(TextAnalyse a) {
			StringBuffer stringBufferWithPunct = new StringBuffer(this.getText()); // Umwandlung in StringBuffer
			for (int i = 0; i < stringBufferWithPunct.length(); i++) { // for-Schlaufe
				char currentChar = stringBufferWithPunct.charAt(i); // assign auf aktuellen char 
				if (currentChar  == ' ' || currentChar  == ',' || currentChar  == '.'  || currentChar  == '!' || currentChar  == '?' || currentChar  == '\'' || currentChar  == '"') { // If ob ein Satzzeichen
					stringBufferWithPunct.deleteCharAt(i); // löschen von char-Satzzeichen 
					i--; // weil Index durch die Löschung verschoben wird 
				}
			}
			String newTextWithoutPunct = stringBufferWithPunct.toString(); // Umwandlung zurück in String
			this.setText(newTextWithoutPunct); // set neuer Text ohne Satzzeichen
			System.out.println("Methode zur Entfernung von Satzzeichen."); 
			System.out.println(""); 
			System.out.println(this.getText()); // Ausgabe in Konsole von geändertem Objekt
		}
}
